PortaLANG is a general-purpose, functional quantum language.

Hello World:
===================================================================================
֎478IUYIG34635TB
#include <main.xh>
main(){
    print("Hello, World!\n");
}

Reminder: you can do all your code on one line!

Commenting:
===================================================================================
//single line comment
/*** multi-line comment ***/

Variables:
===================================================================================
VAR HW == print("Hello, World!\n");

Conditions:
===================================================================================
if(1==1){
    HW;
}else{
    print(EQ(1+1));
}

Loops:
===================================================================================
while(EQ(1+1)=2){
    print("One and one is two\n");
}

Pointers:
===================================================================================
HW::¶x

Loops with Pointers:
===================================================================================
while(EQ(1+9)=10){
    ¶x;
    print("loops with pointers aren't too bad!\n");
}

Conditions with Pointers:
===================================================================================
if(charval(¶x)=100){
    print("Hello World has a charval of 100");
}else{
    print("Hello World does not have a charval of 100");
}

Functions:
===================================================================================
FUNC MAIN(){
    VAR xxx == char "Test";
    VAR vvv == int "22";
    print("&a of the function system.\n",xxx);
    print(vvv+charval(¶x^2));
}

Rewriting Pointers:
===================================================================================
¶x::¶v
EQ(1+1)+¶v::¶x

Arrays:
===================================================================================
ARRAY ¤AA[a,b,c,d|1,2,3,4|¶x,¶v,HW];
print(¤AA.b2);

Math:
===================================================================================
print(EQ(2*5-3+19/2)\n);
print(EQ(sqrt(9));
print(EQ(sin(9+9)));
print(EQ(tan(9+9)));
print(EQ(cos(9+9)));

Seeds:
===================================================================================
֎9238507G2556
֎JV3GHJE4G893
֎7834KH05EH59

Stack Commands:
===================================================================================
STACK[]   //declare stranded stack, or switch to low-mode
Ѧ   //push
⌶  //pop
⍣xx //add
xx⍣ //subtract
⍟yy //divide
yy⍟ //multiply
⌽   //mod
NOT  //not
⍉   //switch
DUPE //duplicate
ROLL //roll
~    //commit output to
STOP //end command stack

Using Stacks with Pointers
===================================================================================
STACK[0,1,2,3,4,5,6,7,8]{       //with 8 as overflow
        Ѧ1x0A
        ⍣¶rt
        ⌶1x0A~Ѧ2xFF
}

Strings
===================================================================================
"this is printable text"
'this isn't printable text because single quotes are stupid for this'
charval("this will output the added byte value of the string, excluding escape codes\n");
strlen("this will output the value of however many characters are in this string, excluding escape codes\n");

Escape Codes
===================================================================================
\n          //new line
\\          //backslash
\a          //system bell
\t          //tab
\v          //vertical tab
\"          //quote
